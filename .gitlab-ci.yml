workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

stages:
  - package
  - test

.docker:
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:20.10.19-dind
  image: docker:20.10.19
  before_script:
    - export DOCKER_BUILDKIT=0
    - export PROGRESS_NO_TRUNC=1

# TODO run this only on merge requests
test:
  stage: test
  extends: .docker
  script:
    - cp $DOCKER_GIT_CONFIG /root/.gitconfig
    - apk add git composer docker-compose build-base
    - git clone https://gitlab.metaways.net/tine20/tine20.git tine20
    - cd tine20/tine20
    - git checkout ${TINE20_BRANCH}
    - composer install --ignore-platform-reqs
    - cd $CI_PROJECT_DIR
    - echo '{"composeFiles":["lessLogs"]}' > pullup.json
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - composer install
    - ./console docker:pull
    - ./console docker:start
    - ./console tine:awaitdb
    - ./console tine:install
    - ./console tine:test -e nogitlabci -e nodockerci Addressbook/AllTests Tinebase/Alltests Calendar/AllTests
    - ./console tine:uninstall

# TODO run this only on master
.full_test:
  extends: .docker
  script:
    - cp $DOCKER_GIT_CONFIG /root/.gitconfig
    - apk add git composer npm docker-compose build-base
    - git clone https://gitlab.metaways.net/tine20/tine20.git tine20
    - cd tine20/tine20
    - git checkout ${TINE20_BRANCH}
    - composer install --ignore-platform-reqs
    - cd Tinebase/js
    - npm install
    - cd $CI_PROJECT_DIR
    - git clone https://gitlab.metaways.net/tine20/documentPreview.git docservice
    - cd docservice
    - composer install --ignore-platform-reqs --no-plugins
    - cd $CI_PROJECT_DIR
    - echo '{"composeFiles":["webpack","docservice","pma","xdebug","spam", "lessLogs"]}' > pullup.json
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - composer install
    - ./console docker:pull
    - ./console docker:start
    - ./console tine:awaitdb
    - ./console tine:install
    - ./console tine:test -e nogitlabci -e nodockerci Addressbook/AllTests Tinebase/Alltests Calendar/AllTests
    - ./console tine:uninstall
  only:
    - master

include:
  - component: $CI_SERVER_FQDN/gitlabci-components/image-build-multiplatform/build@1
    inputs:
      name: dovecot
      context_path: dockerfiles/mailstack/dovecot
      containerfile_path: dockerfiles/mailstack/dovecot/Dockerfile
      registry_auth:
        - registry: ghcr.io
          user: $GHCR_USER
          password: $GHCR_PASSWORD
      image_repos:
        - $CI_REGISTRY_IMAGE
      image_repos_release:
        - ghcr.io/tine-groupware/tine-dev
  - component: $CI_SERVER_FQDN/gitlabci-components/image-build-multiplatform/build@1
    inputs:
      name: postfix
      context_path: dockerfiles/mailstack/postfix
      containerfile_path: dockerfiles/mailstack/postfix/Dockerfile
      registry_auth:
        - registry: ghcr.io
          user: $GHCR_USER
          password: $GHCR_PASSWORD
      image_repos:
        - $CI_REGISTRY_IMAGE
      image_repos_release:
        - ghcr.io/tine-groupware/tine-dev
  - component: $CI_SERVER_FQDN/gitlabci-components/image-build-multiplatform/build@1
    inputs:
      name: mailstackcontrol
      context_path: dockerfiles/mailstack/control
      containerfile_path: dockerfiles/mailstack/control/Dockerfile
      registry_auth:
        - registry: ghcr.io
          user: $GHCR_USER
          password: $GHCR_PASSWORD
      image_repos:
        - $CI_REGISTRY_IMAGE
      image_repos_release:
        - ghcr.io/tine-groupware/tine-dev
  - component: $CI_SERVER_FQDN/gitlabci-components/image-build-multiplatform/build@1
    inputs:
      name: ldap
      context_path: dockerfiles/ldap
      containerfile_path: dockerfiles/ldap/Dockerfile
      registry_auth:
        - registry: ghcr.io
          user: $GHCR_USER
          password: $GHCR_PASSWORD
      image_repos:
        - $CI_REGISTRY_IMAGE
      image_repos_release:
        - ghcr.io/tine-groupware/tine-dev
  - component: $CI_SERVER_FQDN/gitlabci-components/image-build-multiplatform/build@1
    inputs:
      name: node
      context_path: dockerfiles/node
      containerfile_path: dockerfiles/node/Dockerfile
      registry_auth:
        - registry: ghcr.io
          user: $GHCR_USER
          password: $GHCR_PASSWORD
      image_repos:
        - $CI_REGISTRY_IMAGE
      image_repos_release:
        - ghcr.io/tine-groupware/tine-dev